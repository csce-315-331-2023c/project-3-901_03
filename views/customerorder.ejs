<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="../customer.css">
    <title>Order Online</title>
    <script>
        let currentOrder = [];

        function checkoutCart(currentOrder) {
            console.log("CHECKING OUT");
            console.log(currentOrder);
            fetch("/customerorder/submit", {
                method: "POST",
                body: JSON.stringify({ cart: currentOrder }),

                headers: {
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*",
                    "Access-Control-Allow-Methods": "POST",
                },
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            const orderList = document.querySelector("#order-items");
            const totalPrice = document.querySelector("#total-price");
            let total = 0.00;

            function getDescription(foodItem) {
                // Replace this logic with your actual data structure and logic
                if (foodItem === "breakfast") {
                    return breakfast.description;
                } else if (foodItem === "seasonal") {
                    return seasonal.description;
                } else if (foodItem === "drinks") {
                    return drinks.description;
                } else if (foodItem === "savory") {
                    return savory.description;
                } else if (foodItem === "sweet") {
                    return sweet.description;
                }

                // Add more conditions as needed for other food items
            }

            function createOrderItem(itemName, itemPrice, itemDescription) {
                const newItem = document.createElement("li");

                const incrementButton = document.createElement("button");
                incrementButton.textContent = "+";
                incrementButton.addEventListener("click", () => {
                    const orderItem = currentOrder.find(orderItem => orderItem.name === itemName);
                    orderItem.count++;
                    countSpan.textContent = orderItem.count;
                    updateTotal();
                });

                const countSpan = document.createElement("span");
                countSpan.textContent = "1";
                countSpan.style.padding = "0 8px";

                const decrementButton = document.createElement("button");
                decrementButton.textContent = "-";
                decrementButton.addEventListener("click", () => {
                    const orderItem = currentOrder.find(orderItem => orderItem.name === itemName);
                    if (orderItem.count > 1) {
                        orderItem.count--;
                        countSpan.textContent = orderItem.count;
                    } else {
                        const itemIndex = currentOrder.indexOf(orderItem);
                        currentOrder.splice(itemIndex, 1);
                        orderList.removeChild(newItem);
                    }
                    updateTotal();
                });

                newItem.innerHTML = `
                    <img class="food-img" src="/${itemName}.png" onerror="this.onerror=null; this.src='defaultimg.png';" alt="${itemName}">
                    <div class="menu-item-box" onclick="addToOrder(this)">
                        <br></br>
                        <h3>${itemName}</h3>
                        <p>${itemDescription}</p>
                        <p>$${itemPrice.toFixed(2)}</p>
                    </div>
                    `;
                newItem.style.padding = "0 8px";
                newItem.appendChild(incrementButton);
                newItem.appendChild(countSpan);
                newItem.appendChild(decrementButton);

                currentOrder.push({ name: itemName, price: itemPrice, count: 1 });

                return newItem;
            }

            function addToOrder(box) {
                const itemName = box.querySelector("h3").textContent;
                const itemPrice = parseFloat(box.querySelector("p:last-child").textContent.substring(1)); // Extract price from the last <p> element
                const itemDescription = box.querySelector("p:nth-last-child(2)").textContent; // Extract description from the second last <p> element

                const newItem = createOrderItem(itemName, itemPrice, itemDescription);

                newItem.addEventListener("click", () => {
                    newItem.classList.toggle("selected");
                });

                orderList.appendChild(newItem);
                updateTotal();
            }

            const categories = Array.from(new Set(result.map(row => row.category)));

            function createCategoryButtons() {
                const categoryButtonsContainer = document.getElementById("category-buttons");
                categories.forEach(category => {
                    const categoryButton = document.createElement("button");
                    categoryButton.textContent = category;
                    categoryButton.addEventListener("click", () => {
                        showItemsByCategory(category);
                    });
                    categoryButtonsContainer.appendChild(categoryButton);
                });
            }

            function showItemsByCategory(category) {
                const menuItemsContainer = document.getElementById("menu-items");
                const filteredItems = result.filter(row => row.category === category);
                menuItemsContainer.innerHTML = "";

                filteredItems.forEach(row => {
                    const menuItem = document.createElement("li");
                    menuItem.innerHTML = `
                        <img class="food-img" src="/${row.food_name}.png" onerror="this.onerror=null; this.src='defaultimg.png';" alt="${row.food_name}">
                        <div class="menu-item-box" onclick="addToOrder(this)">
                            <br></br>
                            <h3>${row.food_name}</h3>
                            <p>${row.description}</p>
                            <p>$${Number(row.price_food).toFixed(2)}</p>
                        </div>
                    `;

                    menuItemsContainer.appendChild(menuItem);
                });
            }

            function createFilterByButtons() {
                const filterByContainer = document.getElementById("filter-by-buttons");

                categories.forEach(category => {
                    const filterButton = document.createElement("button");
                    filterButton.textContent = `Filter by ${category}`;
                    filterButton.addEventListener("click", () => {
                        filterByCategory(category);
                    });

                    filterByContainer.appendChild(filterButton);
                });
            }

            function filterByCategory(category) {
                const menuItemsContainer = document.getElementById("menu-items");
                const filteredItems = result.filter(row => row.category === category);
                menuItemsContainer.innerHTML = "";

                filteredItems.forEach(row => {
                    const menuItem = document.createElement("li");
                    menuItem.innerHTML = `
                        <img class="food-img" src="/${row.food_name}.png" onerror="this.onerror=null; this.src='defaultimg.png';" alt="${row.food_name}">
                        <div class="menu-item-box" onclick="addToOrder(this)">
                            <br></br>
                            <h3>${row.food_name}</h3>
                            <p>${row.description}</p>
                            <p>$${Number(row.price_food).toFixed(2)}</p>
                        </div>
                    `;

                    menuItemsContainer.appendChild(menuItem);
                });
            }

            // Create category buttons and show items for the default category
            createCategoryButtons();
            createFilterByButtons();
            showItemsByCategory(categories[0]);

            // ... (remaining JavaScript content)

            function updateTotal() {
                total = currentOrder.reduce((acc, item) => acc + item.price * item.count, 0);
                totalPrice.textContent = total.toFixed(2);
            }
        });
    </script>
</head>
<body>
    <div class="p-2">
    <a href="/" class="btn btn-lg border border-1 border border-dark">Back</a>
    </div>
    
    <div class="pos-container">
        <div class="order">
            <h5>Cart</h5>
            <ul id="order-items">
                <!-- Items will be added here dynamically -->
            </ul>
            <p>Total: $<span id="total-price">0.00</span></p>
            <button id="submit-button" onclick="checkoutCart(currentOrder)">Submit</button>
        </div>

        <div class="categ">
            
        </div>

        <div class="menu">
            <h6>Menu</h6>
            <div id="grid">
            <ul id="menu-items">
                <form method="get" action="/index/customerorder">
                    <% if (result && result.length > 0) { %>
                        <% let count = 0; %>
                        <% result.forEach(row => { %>
                            <li data-name="<%= row.food_name%>" data-price="<%=row.price_food%>" value="<%=row.food_name%>"
                                data-description="<%= row.description %>">
                                <img class="food-img" src="/<%=row.food_name%>.png" onerror="this.onerror=null; this.src='defaultimg.png';" alt="<%=row.food_name%>">
                                <div class="menu-item-box" onclick="addToOrder(this)">
                                    <br></br>
                                    <h3><%=row.food_name%></h3>
                                    <p><%= row.description %></p>
                                    <p>$<%= Number(row.price_food).toFixed(2) %></p>
                                </div>
                            </li>
                        <% }); %>
                    <% } %>
                </form>
            </ul>
            </div>
        </div>
    </div>
    <script src="customerorder.js"></script>
</body>

</html>